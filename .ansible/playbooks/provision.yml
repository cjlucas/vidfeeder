- hosts: "{{ ansible_hosts }}"
  tasks:
    - name: Add TimberIO apt GPG key
      apt_key:
        url: https://packagecloud.io/timberio/packages/gpgkey
    - name: Add TimberIO package repository
      apt_repository:
        repo: deb https://packagecloud.io/timberio/packages/ubuntu/ bionic main
    - name: Create vector group # systemd file included with Vector specifies that it be run as vector/vector, but the package does not create a vector group
      group:
        name: vector
        state: present
    - name: Install packages
      apt:
        name: "{{ packages }}"
        update_cache: yes
      vars:
        packages:
          - nginx
          - python3-boto3
          - vector
    - name: Create user
      user:
        state: present
        name: vidfeeder
        shell: /bin/bash
    - name: Create Directories
      file:
        state: directory
        recurse: true
        path: "{{ item }}"
      loop:
        - /home/vidfeeder/.aws
        - /home/vidfeeder/.ssh
        - /opt/vector/bin
    - name: Symlink /opt/vector/bin/vector
      file:
        src: /usr/bin/vector
        dest: /opt/vector/bin/vector
        state: link
    - name: Copy authorized_keys
      shell: cp /root/.ssh/authorized_keys /home/vidfeeder/.ssh
    - name: Change authorized_keys permissions
      file:
        state: file
        path: /home/vidfeeder/.ssh/authorized_keys
        owner: vidfeeder
        group: vidfeeder
        mode: 0600
    - name: Copy sudoers
      template:
        src: templates/sudoers.j2
        dest: /etc/sudoers
        validate: '/usr/sbin/visudo -cf %s'
    - name: Copy Templates
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      loop:
          - {
              src: 'templates/aws_credentials.j2',
              dest: '/home/vidfeeder/.aws/credentails'
            }
          - {
              src: 'templates/nginx.conf.j2',
              dest: '/etc/nginx/nginx.conf'
            }
          - {
              src: 'templates/vector.toml.j2',
              dest: '/etc/vector/vector.toml'
            }
    - name: Enable and restart nginx
      systemd:
        name: nginx
        state: restarted # Never idempotent, always restarts
        enabled: yes
    - name: Enable and restart Vector
      systemd:
        name: vector
        state: restarted # Never idempotent, always restarts
        enabled: yes
